name: Frontend CI Pipeline

on:
  push:
    branches:
      - testingBranch

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install test reporters
        run: npm install --save-dev jest jest-html-reporters

      - name: Run tests with styled test report and coverage
        run: |
          mkdir -p test_results htmlcov artifacts
          npx jest --coverage --reporters=default --reporters=jest-html-reporters

      - name: Inject last updated timestamp into dashboard
        run: |
          TIMESTAMP=$(TZ="Europe/Copenhagen" date +"%Y-%m-%d %H:%M CET")
          sed -i "s|{{LAST_UPDATED}}|$TIMESTAMP|" Test/ReportDashboard/index.html

      - name: Collect generated artifacts
        run: |
          mkdir -p artifacts
          
          # Safely locate test-report.html if not in root
          REPORT_FILE=$(find . -name "test-report.html" | head -n 1)
          if [ -z "$REPORT_FILE" ]; then
            echo "‚ùå test-report.html not found"
            exit 1
          fi
          cp "$REPORT_FILE" artifacts/test-report.html

          # Coverage and dashboard
          cp -r coverage/lcov-report artifacts/htmlcov
          cp Frontend/Test/ReportDashboard/index.html artifacts/index.html


      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: artifacts/*

  deploy:
    needs: frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifacts
          path: public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
