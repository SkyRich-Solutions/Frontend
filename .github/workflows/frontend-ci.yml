name: Frontend CI Pipeline

on:
  push:
    branches:
      - testingBranch

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install test reporter
        run: npm install --save-dev jest jest-html-reporter

      - name: Run tests with HTML report
        run: |
          mkdir -p artifacts/test-report
          npx jest --ci --reporters=default --reporters=jest-html-reporter
        env:
          JEST_HTML_REPORTER_OUTPUT_PATH: ./artifacts/test-report/test-report.html

      - name: Generate code coverage
        run: |
          npx jest
          if [ -d "coverage/lcov-report" ]; then
            mkdir -p artifacts/htmlcov
            cp -r coverage/lcov-report/* artifacts/htmlcov
          else
            echo "⚠️ No coverage report generated."
          fi

      - name: Inject last updated timestamp into dashboard
        run: |
          TIMESTAMP=$(TZ="Europe/Copenhagen" date +"%Y-%m-%d %H:%M CET")
          sed -i "s|{{LAST_UPDATED}}|$TIMESTAMP|" Test/ReportDashboard/index.html

      - name: Copy dashboard to artifact folder
        run: |
          cp Test/ReportDashboard/index.html artifacts/index.html
          # Flatten test-report to root so GitHub Pages shows it at /Frontend/test-report.html
          cp artifacts/test-report/test-report.html artifacts/test-report.html

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: artifacts/*

  deploy:
    needs: frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifacts
          path: public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
